# Use a lightweight base image with Python and Conda
FROM continuumio/miniconda3:latest

# Install system dependencies required by Qiskit-Aer
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    libstdc++6 \
    libopenblas-dev \
    liblapack-dev \
    && apt-get clean

# Set working directory
WORKDIR /app

# Copy the environment.yml file into the container
COPY environment.yml .

# Create the Conda environment with pinned numpy version
RUN conda env create -f environment.yml && \
    conda clean -afy && \
    echo "source activate optimize-molecule" > ~/.bashrc

ENV PATH /opt/conda/envs/optimize-molecule/bin:$PATH

# Explicitly force NumPy to version 1.24.3 for OpenMM compatibility
RUN pip install numpy==1.24.3 --force-reinstall

# Copy the application code
COPY . .

# Fix SQLAlchemy health check
RUN sed -i "1s/from flask import Flask, jsonify/from flask import Flask, jsonify\nfrom sqlalchemy import text/" app.py && \
    sed -i "s/db.session.execute('SELECT 1')/db.session.execute(text('SELECT 1'))/" app.py

# Expose the Flask port
EXPOSE 5000

COPY .env .

# Start the Flask application
CMD ["gunicorn", "--bind", "0.0.0.0:5000", "--workers", "3", "--timeout", "300", "app:app"]